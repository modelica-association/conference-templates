@Article{DuffReid:1978,
 author    = {Iain S. Duff and John K. Reid},
 title     = {An Implementation of Tarjan's Algorithm for the Block Triangularization of a Matrix},
 journal   = {ACM Transactions on Mathematical Software},
 volume    = {4},
 number    = {2},
 year      = {1978},
 pages     = {137--147},
 publisher = {ACM Press},
 address   = {New York, USA},
 Doi                                                                                            = {10.1145/355780.355785},
}

@Article{Pantelides:1988,
  Author                   = {Constantinos C. Pantelides},
  Title                    = {The Consistent Initialization of Differential-Algebraic Systems},
  Journal                  = {SIAM Journal on Scientific and Statistical Computing},
  Year                     = {1988},
  Number                   = {2},
  Pages                    = {213-231},
  Volume                   = {9},
  Publisher                = {SIAM},
  Doi                      = {10.1137/0909014},
}

@Book{Pierce:2002,
  Author                   = {Benjamin C. Pierce},
  Title                    = {Types and Programming Languages},
  Publisher                = {The MIT Press},
  Year                     = {2002},
  ISBN                     = {0-262-16209-1},
}

@techreport{Plotkin:1981,
  author      = "Gordon D. Plotkin",
  title       = "{A Structural Approach to Operational Semantics}",
  institution = "Department of Computer Science, University of Aarhus",
  year        = "1981",
}

@TechReport{MLSv32r2,
  author      = {{Modelica Association}},
  title       = {{M}odelica -- A Unified Object-Oriented Language for Systems Modeling. {L}anguage Specification Version 3.2 Revision 2},
  institution = {Modelica Association},
  year        = {2013},
  address     = {Link{\"o}ping},
  month       = jul,
  abstract    = {This  document  defines  the  Modelica language, version  3.2,  which  is  developed  by  the  Modelica
Association,  a  non-profit  organization  with  seat  in  Linköping,  Sweden.  Modelica  is  a  freely
available,  object-oriented  language  for  modeling  of  large,  complex,  and  heterogeneous  physical
systems.  It  is  suited  for  multi-domain  modeling,  for  example,  mechatronic  models  in  robotics,
automotive  and  aerospace  applications  involving  mechanical,  electrical,  hydraulic  and  control
subsystems, process oriented applications and generation and distribution of electric power. Models
in  Modelica  are  mathematically  described  by  differential,  algebraic  and  discrete  equations.  No
particular variable needs to be solved for manually. A Modelica tool will have enough information
to decide that automatically. Modelica is designed such that available, specialized algorithms can be
utilized  to  enable  efficient  handling  of  large  models  having  more  than  one  hundred  thousand
equations.  Modelica  is  suited  and  used  for  hardware-in-the-loop  simulations  and  for  embedded
control systems. More information is available at http://www.Modelica.org/

Version 3.2 Revision 2 clarifies and fixes issues of the specification text. Furthermore, it adds
a few new features to Version 3.2 Revision 1, in order that the Modelica Standard Library version 3.2.1 is
fully compliant to the Modelica Language Version 3.2 Revision 2.

Version 3.2 Revision 1 defines exactly the same language as Version 3.2. It just clarifies and fixes
several issues of the specification text.},
  url         = {https://www.modelica.org/documents/ModelicaSpec32Revision2.pdf},
}

@TechReport{MLSv33r1,
  author      = {{Modelica Association}},
  title       = {{M}odelica -- A Unified Object-Oriented Language for Systems Modeling. {L}anguage Specification Version 3.3 Revision 1},
  institution = {Modelica Association},
  year        = {2014},
  address     = {Link{\"o}ping},
  month       = jul,
  abstract    = {This document defines the Modelica1 language, version 3.3, which is
  developed by the Modelica Association, a non-profit organization
  with seat in Linköping, Sweden. Modelica is a freely available, object-oriented
  language for modeling of large, complex, and heterogeneous systems.
  It is suited for multi-domain modeling, for example, mechatronic
  models in robotics, automotive and aerospace applications involving
  mechanical, electrical, hydraulic control and state machine subsystems,
  process oriented applications and generation and distribution of
  electric power. Models in Modelica are mathematically described by
  differential, algebraic and discrete equations. No particular variable
  needs to be solved for manually. A Modelica tool will have enough
  information to decide that automatically. Modelica is designed such
  that available, specialized algorithms can be utilized to enable
  efficient handling of large models having more than one hundred thousand
  equations. Modelica is suited and used for hardware-in-the-loop simulations
  and for embedded control systems. More information is available at
  http://www.Modelica.org/


  Version 3.3 Revision 1 clarifies and fixes issues of the specification
  text. In particular it includes all updates made in Version 3.2 Revision
  2.},
  url         = {https://www.modelica.org/documents/ModelicaSpec33Revision1.pdf},
}

@TechReport{MLSv34,
  author      = {{Modelica Association}},
  title       = {{M}odelica -- A Unified Object-Oriented Language for Systems Modeling. {L}anguage Specification Version 3.4},
  institution = {Modelica Association},
  year        = {2017},
  address     = {Link{\"o}ping},
  month       = apr,
  abstract    = {This  document  defines  the  Modelica language,  version 3.4,  which  is  developed  by  the  Modelica
Association,  a  non-profit  organization  with  seat  in  Linköping,  Sweden.  Modelica  is  a  freely
available, object-oriented language for modeling of large, complex, and heterogeneous systems. It is
suited  for  multi-domain  modeling,  for  example,  mechatronic  models  in  robotics,  automotive  and
aerospace  applications  involving  mechanical,  electrical,  hydraulic  control and  state  machine
subsystems, process oriented applications and generation and distribution of electric power. Models
in  Modelica  are  mathematically  described  by  differential,  algebraic  and  discrete  equations.  No
particular variable needs to be solved for manually. A Modelica tool will have enough information
to decide that automatically. Modelica is designed such that available, specialized algorithms can be
utilized  to  enable  efficient  handling  of  large  models  having  more  than  one  hundred  thousand
equations.  Modelica  is  suited  and  used  for  hardware-in-the-loop  simulations  and  for  embedded
control systems. More information is available at http://www.Modelica.org/},
  url         = {https://www.modelica.org/documents/ModelicaSpec34.pdf},
}

@software{inkscape,
  title = {Inkscape},
  url = {https://inkscape.org/},
  urldate = {2020-11-23}
}

@book{Kernighan:1988,
  title={The C programming language},
  author={Brian W. Kernighan and Dennis M. Ritchie},
  isbn={0-13-110362-8},
  edition=2,
  year={1988},
  publisher={Prentice Hall}
}

@inproceedings{colaco:2003,
  TITLE = {{Clocks as First Class Abstract Types}},
  AUTHOR = {Cola{\c c}o, Jean-Louis and Pouzet, Marc},
  BOOKTITLE = {{Third International Conference on Embedded Software (EMSOFT'03)}},
  PUBLISHER = {{Springer}},
  SERIES = {Lecture Notes in Computer Science},
  VOLUME = {2855},
  PAGES = {134-155},
  YEAR = {2003},
  MONTH = Oct,
  DOI = {10.1007/978-3-540-45212-6_10}
}

@phdthesis{Doe:PhD,
    title    = {A really catchy title},
    school   = {Fooland University, Department of Computer Science},
    author   = {John Doe},
    type     = {Doctoral dissertation},
    doi      = {xxx-yyy},
    year     = {2012}
}

@thesis{Doe:MSc,
    title    = {A catchy title},
    school   = {Fooland University, Department of Computer Science},
    author   = {John Doe},
    type     = {Master's thesis},
    url      = {https://fooland.university/cs/doe/msc.pdf},
    year     = {2007}
}

@thesis{Doe:BSc,
    title    = {A somewhat catchy title},
    school   = {Fooland University, Department of Computer Science},
    author   = {John Doe},
    type     = {Bachelor's thesis},
    url      = {https://fooland.university/cs/doe/bsc.pdf},
    year     = {2005}
}
